AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  execise-hel-sam-app

  Sample SAM Template for execise-hel-sam-app

Resources:
  PrepareFoodsStepFunction:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: step-functions/prepare-foods/prepare_foods.json
      DefinitionSubstitutions:
        ChangePickingToDeliveryFunctionArn: !GetAtt ChangePickingToDeliveryFunction.Arn
        SendMailToMemberFunctionArn: !GetAtt SendMailToMemberFunction.Arn
      Events:
        HourlyTradingSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the stock trading state machine every hour
            Enabled: False # This schedule is disabled by default to avoid incurring charges.
            Schedule: "rate(1 hour)"
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref ChangePickingToDeliveryFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SendMailToMemberFunction

  ChangePickingToDeliveryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/change-picking-to-delivery/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x

  SendMailToMemberFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/send-mail-to-member/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x

  # ChangePickingToDeliveryFunctionExecutionRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: !Ref ChangePickingToDeliveryFunction
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #           Action:
  #             - sts:AssumeRole

  # SendMailToMemberFunctionExecutionRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: !Ref SendMailToMemberFunction
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #           Action:
  #             - sts:AssumeRole

  # lambdaexecutionpolicy:
  #   DependsOn:
  #     - ChangePickingToDeliveryFunctionExecutionRole
  #     - SendMailToMemberFunctionExecutionRole
  #   Type: AWS::IAM::Policy
  #   Properties:
  #     PolicyName: handle-meeting-lambda-execution-policy
  #     Roles:
  #       - Ref: ChangePickingToDeliveryFunctionExecutionRole
  #       - Ref: SendMailToMemberFunctionExecutionRole
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Action:
  #             - 'dynamodb:GetItem'
  #             - 'dynamodb:PutItem'
  #             - 'dynamodb:UpdateItem'
  #             - 'dynamodb:Query'
  #           Effect: Allow
  #           Resource:
  #             - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PrepareFoodsStepFunctionArn:
    Description: "Prepare foods step function ARN"
    Value: !Ref PrepareFoodsStepFunction
  PrepareFoodsStepFunctionRole:
    Description: "IAM Role created for prepare foods step function based on the specified SAM Policy Templates"
    Value: !GetAtt PrepareFoodsStepFunctionRole.Arn
